// <auto-generated />
using _02.Social_Network.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace _02.SocialNetwork.Migrations
{
    [DbContext(typeof(SocialNetworkContext))]
    [Migration("20170926153512_friendships")]
    partial class friendships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_02.Social_Network.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BackgroundColor");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.AlbumsPhotographers", b =>
                {
                    b.Property<int>("AlbumId");

                    b.Property<int>("PhotographerId");

                    b.Property<int?>("AlbumId1");

                    b.HasKey("AlbumId", "PhotographerId");

                    b.HasIndex("AlbumId1");

                    b.HasIndex("PhotographerId");

                    b.ToTable("AlbumsPhotographers");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.AlbumsPictures", b =>
                {
                    b.Property<int>("AlbumId");

                    b.Property<int>("PictureId");

                    b.HasKey("AlbumId", "PictureId");

                    b.HasIndex("PictureId");

                    b.ToTable("AlbumsPictures");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.AlbumsTags", b =>
                {
                    b.Property<int>("AlbumId");

                    b.Property<int>("TagId");

                    b.HasKey("AlbumId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("AlbumsTags");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.Friendship", b =>
                {
                    b.Property<int>("FromPhotographerId");

                    b.Property<int>("ToPhotographerId");

                    b.HasKey("FromPhotographerId", "ToPhotographerId");

                    b.HasIndex("ToPhotographerId");

                    b.ToTable("Friendship");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Photographer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Photographers");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caption");

                    b.Property<string>("Path");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.AlbumsPhotographers", b =>
                {
                    b.HasOne("_02.Social_Network.Models.Album", "Album")
                        .WithMany("Owners")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_02.Social_Network.Models.Album")
                        .WithMany("Viewers")
                        .HasForeignKey("AlbumId1");

                    b.HasOne("_02.Social_Network.Models.Photographer", "Photographer")
                        .WithMany("Albums")
                        .HasForeignKey("PhotographerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.AlbumsPictures", b =>
                {
                    b.HasOne("_02.Social_Network.Models.Album", "Album")
                        .WithMany("Pictures")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_02.Social_Network.Models.Picture", "Picture")
                        .WithMany("Albums")
                        .HasForeignKey("PictureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.AlbumsTags", b =>
                {
                    b.HasOne("_02.Social_Network.Models.Album", "Album")
                        .WithMany("Tags")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_02.Social_Network.Models.Tag", "Tag")
                        .WithMany("Albums")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_02.Social_Network.Models.Mappings.Friendship", b =>
                {
                    b.HasOne("_02.Social_Network.Models.Photographer", "FromPhotographer")
                        .WithMany("FromFriends")
                        .HasForeignKey("FromPhotographerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("_02.Social_Network.Models.Photographer", "ToPhotographer")
                        .WithMany("ToFriends")
                        .HasForeignKey("ToPhotographerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
